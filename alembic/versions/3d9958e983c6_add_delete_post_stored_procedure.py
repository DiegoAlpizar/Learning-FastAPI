"""Add `delete_post` stored procedure

Revision ID: 3d9958e983c6
Revises: f74f67d01b89
Create Date: 2024-05-21 06:55:25.755145

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_function import PGFunction
from sqlalchemy import text as sql_text

# revision identifiers, used by Alembic.
revision: str = '3d9958e983c6'
down_revision: Union[str, None] = 'f74f67d01b89'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_delete_post = PGFunction(
        schema="public",
        signature="delete_post(_id INT , _user_id INT)",
        definition="RETURNS posts AS\n\t\t\t\t\t\t\t\t\t\t$BODY$\n\t\t\t\t\t\t\t\t\t\tDECLARE\n\t\t\t\t\t\t\t\t\t\t\tdeleted_post\tposts%ROWTYPE ;\n\t\t\t\t\t\t\t\t\t\tBEGIN\n\t\t\t\t\t\t\t\t\t\t\tDELETE\n\t\t\t\t\t\t\t\t\t\t\tFROM\t\tposts\n\t\t\t\t\t\t\t\t\t\t\tWHERE\t\tid = _id\n\t\t\t\t\t\t\t\t\t\t\tRETURNING\t*\n\t\t\t\t\t\t\t\t\t\t\tINTO STRICT\tdeleted_post\n\t\t\t\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tIF deleted_post.user_id != _user_id\n\t\t\t\t\t\t\t\t\t\t\tTHEN\n\t\t\t\t\t\t\t\t\t\t\t\tRAISE 'User ID --> % is not the owner of post ID --> %' , _user_id , _id ;\n\t\t\t\t\t\t\t\t\t\t\tEND IF ;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tRETURN\tdeleted_post ;\n\t\t\t\t\t\t\t\t\t\tEXCEPTION\n\t\t\t\t\t\t\t\t\t\t\tWHEN NO_DATA_FOUND THEN RAISE NO_DATA_FOUND USING MESSAGE = 'Nonexistent post ID --> %' || _id ;\n\t\t\t\t\t\t\t\t\t\tEND ;\n\t\t\t\t\t\t\t\t\t\t$BODY$\n\t\t\t\t\t\t\t\t\t\tLANGUAGE plpgsql"
    )
    op.create_entity(public_delete_post)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_delete_post = PGFunction(
        schema="public",
        signature="delete_post(_id INT , _user_id INT)",
        definition="RETURNS posts AS\n\t\t\t\t\t\t\t\t\t\t$BODY$\n\t\t\t\t\t\t\t\t\t\tDECLARE\n\t\t\t\t\t\t\t\t\t\t\tdeleted_post\tposts%ROWTYPE ;\n\t\t\t\t\t\t\t\t\t\tBEGIN\n\t\t\t\t\t\t\t\t\t\t\tDELETE\n\t\t\t\t\t\t\t\t\t\t\tFROM\t\tposts\n\t\t\t\t\t\t\t\t\t\t\tWHERE\t\tid = _id\n\t\t\t\t\t\t\t\t\t\t\tRETURNING\t*\n\t\t\t\t\t\t\t\t\t\t\tINTO STRICT\tdeleted_post\n\t\t\t\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tIF deleted_post.user_id != _user_id\n\t\t\t\t\t\t\t\t\t\t\tTHEN\n\t\t\t\t\t\t\t\t\t\t\t\tRAISE 'User ID --> % is not the owner of post ID --> %' , _user_id , _id ;\n\t\t\t\t\t\t\t\t\t\t\tEND IF ;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tRETURN\tdeleted_post ;\n\t\t\t\t\t\t\t\t\t\tEXCEPTION\n\t\t\t\t\t\t\t\t\t\t\tWHEN NO_DATA_FOUND THEN RAISE NO_DATA_FOUND USING MESSAGE = 'Nonexistent post ID --> %' || _id ;\n\t\t\t\t\t\t\t\t\t\tEND ;\n\t\t\t\t\t\t\t\t\t\t$BODY$\n\t\t\t\t\t\t\t\t\t\tLANGUAGE plpgsql"
    )
    op.drop_entity(public_delete_post)

    # ### end Alembic commands ###
